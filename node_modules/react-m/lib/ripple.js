'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactVendorPrefixes = require('react-vendor-prefixes');

var _reactVendorPrefixes2 = _interopRequireDefault(_reactVendorPrefixes);

var Ripple = (function (_React$Component) {
  _inherits(Ripple, _React$Component);

  _createClass(Ripple, [{
    key: 'render',
    value: function render() {
      var _this = this;

      var _props = this.props;
      var color = _props.color;
      var center = _props.center;
      var container = _props.container;

      var styleContainer = _extends({}, styles.container, container);
      var styleRipple = _extends({}, styles.ripple);

      styleRipple.color = color;
      styleRipple.background = color;

      if (this.data !== undefined) {
        styleRipple.width = this.data.size;
        styleRipple.height = this.data.size;
        if (this.state.visible) {
          styleRipple = _extends({}, styleRipple, styles.isVisible);
        }
        if (!this.state.start) {
          styleRipple = _extends({}, styleRipple, styles.isAnimating);
        }
        styleRipple.transform = transform(this.state.start, this.data.x, this.data.y, center, this.data.width, this.data.height);
      }

      return _react2['default'].createElement(
        'div',
        {
          style: styleContainer,
          onMouseDown: this.onStart.bind(this),
          onMouseUp: this.onEnd.bind(this),
          onMouseLeave: this.onEnd.bind(this),
          onTouchEnd: this.onEnd.bind(this),
          onBlur: this.onEnd.bind(this)
        },
        _react2['default'].createElement('div', {
          style: styleRipple,
          ref: function (e) {
            return _this.ripple = e;
          }
        })
      );
    }
  }, {
    key: 'onStart',
    value: function onStart(e) {
      var _this2 = this;

      if (this.data === undefined) {
        var rect = e.currentTarget.parentNode.getBoundingClientRect();
        this.data = {
          width: rect.width,
          height: rect.height,
          size: Math.sqrt(rect.width * rect.width + rect.height * rect.height) * 2
        };
      }

      var bound = e.currentTarget.getBoundingClientRect();

      // Check if we are handling a keyboard click.
      if (e.clientX === 0 && e.clientY === 0) {
        this.data.x = Math.round(bound.width / 2);
        this.data.y = Math.round(bound.height / 2);
      } else {
        var clientX = e.clientX ? e.clientX : e.touches[0].clientX;
        var clientY = e.clientY ? e.clientY : e.touches[0].clientY;
        this.data.x = Math.round(clientX - bound.left);
        this.data.y = Math.round(clientY - bound.top);
      }

      this.setState({ visible: true });
      this.setState({ start: true });

      var frameCount = 1;
      var animHandler = function animHandler() {
        frameCount--;
        if (frameCount > 0) requestAnimationFrame(animHandler);else _this2.setState({ start: false });
      };
      requestAnimationFrame(animHandler);
    }
  }, {
    key: 'onEnd',
    value: function onEnd(e) {
      var _this3 = this;

      if (e && e.detail !== 2) {
        this.setState({ visible: false });
      } else {
        setTimeout(function () {
          _this3.setState({ visible: false });
        }, 1);
      }
    }
  }], [{
    key: 'propTypes',
    value: {
      color: _react2['default'].PropTypes.string,
      center: _react2['default'].PropTypes.bool,
      container: _react2['default'].PropTypes.object
    },
    enumerable: true
  }, {
    key: 'defaultProps',
    value: {
      color: '#000'
    },
    enumerable: true
  }]);

  function Ripple() {
    _classCallCheck(this, Ripple);

    _get(Object.getPrototypeOf(Ripple.prototype), 'constructor', this).call(this);
    this.state = {
      visible: false,
      start: false
    };
  }

  return Ripple;
})(_react2['default'].Component);

exports.Ripple = Ripple;

function transform(start, x, y, center, boundWidth, boundHeight) {
  var transformString;
  var scale;
  var offset = 'translate(' + x + 'px, ' + y + 'px)';

  if (start) {
    scale = 'scale(0.0001, 0.0001)';
  } else {
    scale = '';
    if (center) {
      offset = 'translate(' + boundWidth / 2 + 'px, ' + boundHeight / 2 + 'px)';
    }
  }

  return 'translate(-50%, -50%) ' + offset + ' ' + scale;
}

exports['default'] = Ripple;

var styles = _reactVendorPrefixes2['default'].prefix({
  container: {
    position: 'absolute',
    zIndex: 0,
    overflow: 'hidden'
  },

  ripple: {
    width: 50,
    height: 50,
    transform: 'translate(-50%, -50%)',

    //background: '#000',
    //color: '#000',
    borderRadius: '50%',

    left: 0,
    opacity: 0,
    pointerEvents: 'none',
    position: 'absolute',
    top: 0,
    overflow: 'hidden'
  },

  borderRadius: {},

  isAnimating: {
    transition: 'transform 0.3s cubic-bezier(0,0,.2,1),width 0.3s cubic-bezier(0,0,.2,1),height 0.3s cubic-bezier(0,0,.2,1),opacity 0.6s cubic-bezier(0,0,.2,1)'
  },

  isVisible: {
    opacity: 0.4
  }
});